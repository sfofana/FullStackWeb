{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/logout/logout.component.ts","webpack:///src/app/components/logout/logout.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/services/subject.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/services/validation.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","memory","holder","session","subscribe","data","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","service","validation","router","profile","transaction","creditAccounts","bankkingAccounts","toggle","accounts","forEach","account","credit","push","error","message","email","password","login","setSession","reset","tab","console","log","deposit","withdraw","transfer","apply","name","holderId","accountName","transferName","receiverEmail","transferAccount","applyForAccount","HomeComponent","navigate","LogoutComponent","firstname","lastname","logout","ProfileComponent","edit","dob","address","creditScore","mode","editProfile","getInfo","RegisterComponent","register","SubjectService","blankHolder","unsunscribe","behavior","asObservable","next","providedIn","UserService","http","post","baseUrl","registerUrl","loginUrl","logoutUrl","applyUrl","put","editUrl","depositUrl","withdrawUrl","transferUrl","ValidationService","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,QAAMC,MAAM,GAAW,CACrB;AAACC,UAAI,EAAE,MAAP;AAAeC,eAAS,EAAE;AAA1B,KADqB,EAErB;AAACD,UAAI,EAAE,WAAP;AAAoBC,eAAS,EAAE;AAA/B,KAFqB,EAGrB;AAACD,UAAI,EAAE,UAAP;AAAmBC,eAAS,EAAE;AAA9B,KAHqB,EAIrB;AAACD,UAAI,EAAE,SAAP;AAAkBC,eAAS,EAAE;AAA7B,KAJqB,EAKrB;AAACD,UAAI,EAAE,QAAP;AAAiBC,eAAS,EAAE;AAA5B,KALqB,EAMrB;AAACD,UAAI,EAAE,IAAP;AAAaE,eAAS,EAAE,MAAxB;AAAgCC,gBAAU,EAAE;AAA5C,KANqB,CAAvB;;QAaaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACpB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGM;;AAA0F;;AAC9C;;AAAK;;;;;;AACjD;;AAA8F;;AACpD;;AAAQ;;;;;;AAClD;;AAA8F;;AACpD;;AAAS;;;;;;AACnD;;AAA4F;;AAClD;;AAAO;;;;;;AACjD;;AAA2F;;AACjD;;AAAQ;;;;QDL3CU,Y;AAIX,4BAAoBC,MAApB,EAA4C;AAAA;;AAAxB,aAAAA,MAAA,GAAAA,MAAA;AAFpB,aAAAC,MAAA,GAAwB,EAAxB;AAE+C;;;;mCAEvC;AAAA;;AACN,eAAKD,MAAL,CAAYE,OAAZ,CAAoBC,SAApB,CAA8B,UAAAC,IAAI;AAAA,mBAAI,KAAI,CAACH,MAAL,GAAcG,IAAlB;AAAA,WAAlC;AACD;;;;;;;uBARUL,Y,EAAY,yI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,ojF;AAAA;AAAA;ACRzB;;AACE;;AACA;;AACE;;AACE;;AAEA;;AAEA;;AAEA;;AAEA;;AAEF;;AAGA;;AACE;;AACF;;AAEF;;AACF;;AAGA;;AAGE;;AACE;;AACE;;AAAI;;AAA0B;;AAC9B;;AAAG;;AAAoB;;AACvB;;AAAO;;AAAM;;AACb;;AACA;;AAA6D;;AAAS;;AACxE;;AACF;;AAGA;;AACE;;AAAI;;AAAO;;AACX;;AAAG;;AAA2B;;AAC9B;;AAAoD;;AAAW;;AAC/D;;AAA+C;;AAAiB;;AAChE;;AAAmD;;AAAoB;;AACvE;;AACE;;AAAG;;AAAH;;AACA;;AAAG;;AAAH;;AACA;;AAAG;;AAAH;;AACA;;AAAG;;AAAkE;;AAAY;;AAAS;;AAC5F;;AACF;;AAGF;;AAGA;;AACE;;AAAI;;AAAU;;AACd;;AACE;;AACA;;AACA;;AACA;;AACA;;AACA;;AACF;;AACA;;AAAG;;AAAW;;AACkB;;AAAM;;AAAI;;AAC5C;;;;AAjEc;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;;;;;;;;sEDJDA,Y,EAAY;cALxB,uDAKwB;eALd;AACTM,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AETzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAsCaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAPT,CACT,kEADS,EAET,8EAFS,EAGT,yEAHS,C;AAIV,gBAVQ,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,qEAJO,CAUR;;;;0HAGUA,S,EAAS;AAAA,uBApBlB,2DAoBkB,EAnBlB,6EAmBkB,EAlBlB,sFAkBkB,EAjBlB,6FAiBkB,EAhBlB,0FAgBkB,EAflB,oFAekB;AAfH,kBAGf,uEAHe,EAIf,oEAJe,EAKf,0DALe,EAMf,qEANe;AAeG,O;AATF,K;;;;;sEASPA,S,EAAS;cAtBrB,sDAsBqB;eAtBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,6EAFY,EAGZ,sFAHY,EAIZ,6FAJY,EAKZ,0FALY,EAMZ,oFANY,CADN;AASRX,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,qEAJO,CATD;AAeRY,mBAAS,EAAE,CACT,kEADS,EAET,8EAFS,EAGT,yEAHS,CAfH;AAoBRC,mBAAS,EAAE,CAAC,2DAAD;AApBH,S;AAsBY,Q;;;;;;;;;;;;;;;;;;ACpCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACawB;;AACI;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAmB;;AAC3B;;;;;;AAFQ;;AAAA;;AACA;;AAAA;;;;;;AAeR;;AACI;;AAAI;;AAAe;;AACnB;;AAAI;;AAAkB;;AAC1B;;;;;;AAFQ;;AAAA;;AACA;;AAAA;;;;;;AAXpB;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAO;;AACf;;AACJ;;AACA;;AACI;;AAIJ;;AACJ;;AACJ;;;;;;AANgB;;AAAA;;;;;;;;AAcI;;AACI;;AAA0C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtC;;AAAgB;;AACxB;;;;;;AADQ;;AAAA;;;;;;;;AAR5B;;AACI;;AACI;;AAAI;;AAAiB;;AACrB;;AACI;;AACI;;AACI;;AAIJ;;AACJ;;AACA;;AACI;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACA;;AAAkD;;AAAO;;AAAM;;AACnE;;AACA;;AACI;;AAA8D;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAC9E;;AACb;;AACJ;;AACJ;;AACJ;;;;;;AAhBwB;;AAAA;;AAOD;;AAAA;;;;;;;;AAiBH;;AACI;;AAA0C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtC;;AAAgB;;AACxB;;;;;;AADQ;;AAAA;;;;;;;;AAR5B;;AACI;;AACI;;AAAI;;AAAiB;;AACrB;;AACI;;AACI;;AACI;;AAIJ;;AACJ;;AACA;;AACI;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACA;;AAAkD;;AAAO;;AAAM;;AACnE;;AACA;;AACI;;AAA8D;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAC/E;;AACb;;AACJ;;AACJ;;AACJ;;;;;;AAhBwB;;AAAA;;AAOD;;AAAA;;;;;;;;AAiBH;;AACI;;AAA0C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtC;;AAAgB;;AACxB;;;;;;AADQ;;AAAA;;;;;;;;AASR;;AACI;;AACI;AAAA;;AAAA;;AAAA;;AAAA,0DAAsC,IAAtC;AAA0C,SAA1C;;AAA6C;;AAAgB;;AACrE;;;;;;AADqD;;AAAA;;;;;;;;AAnBzE;;AACI;;AACI;;AACI;;AAAI;;AAAsB;;AAC1B;;AACI;;AACI;;AAIJ;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AAAoB;;AACxB;;AACI;;AACI;;AAIJ;;AACJ;;AACA;;AACA;;AAAI;;AAA4B;;AAChC;;AACI;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACA;;AAAkD;;AAAO;;AAAK;;AAClE;;AACJ;;AACA;;AACI;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACA;;AAAkD;;AAAO;;AAAM;;AACnE;;AACA;;AACI;;AAA8D;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAC/E;;AACb;;AACJ;;AACJ;;;;;;AAjCwB;;AAAA;;AAWA;;AAAA;;AASD;;AAAA;;AAKJ;;AAAA;;;;;;;;AAUnB;;AACI;;AACI;;AAAI;;AAAoB;;AACxB;;AACI;;AACI;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACA;;AAAkD;;AAAO;;AAAY;;AACzE;;AACA;;AACI;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACA;;AAAO;;AAAe;;AACtB;;AACA;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAO;;AAC3C;;AACJ;;AACJ;;AACJ;;;;;;AAZuB;;AAAA;;AAIA;;AAAA;;;;QD3HtBC,kB;AAaX,kCAAoBC,OAApB,EAAkDC,UAAlD,EAAyFd,MAAzF,EAAyHe,MAAzH,EAAyI;AAAA;;AAArH,aAAAF,OAAA,GAAAA,OAAA;AAA8B,aAAAC,UAAA,GAAAA,UAAA;AAAuC,aAAAd,MAAA,GAAAA,MAAA;AAAgC,aAAAe,MAAA,GAAAA,MAAA;AAXzH,aAAAd,MAAA,GAAwB,EAAxB;AACA,aAAAe,OAAA,GAAmB,EAAnB;AACA,aAAAC,WAAA,GAA2B,EAA3B;AACA,aAAAC,cAAA,GAA4B,EAA5B;AACA,aAAAC,gBAAA,GAA8B,EAA9B;AAO4I;;;;mCAEpI;AAAA;;AACN,eAAKC,MAAL,CAAY,SAAZ;AACA,eAAKpB,MAAL,CAAYE,OAAZ,CAAoBC,SAApB,CACE,UAAAC,IAAI,EAAI;AACN,kBAAI,CAACH,MAAL,GAAcG,IAAd;AACA,gBAAIA,IAAI,CAACiB,QAAT,EACEjB,IAAI,CAACiB,QAAL,CAAcC,OAAd,CAAsB,UAAAC,OAAO,EAAI;AAC/B,kBAAIA,OAAO,CAACC,MAAZ,EACE,MAAI,CAACN,cAAL,CAAoBO,IAApB,CAAyBF,OAAzB,EADF,KAGE,MAAI,CAACJ,gBAAL,CAAsBM,IAAtB,CAA2BF,OAA3B;AACH,aALD;AAMH,WAVH,EAWE,UAAAG,KAAK;AAAA,mBAAI,MAAI,CAACC,OAAL,GAAeD,KAAK,CAACA,KAAN,CAAYC,OAA/B;AAAA,WAXP;AAaD;;;kCAES;AAAA;;AACR,eAAKX,OAAL,CAAaY,KAAb,GAAqB,KAAK3B,MAAL,CAAY2B,KAAjC;AACA,eAAKZ,OAAL,CAAaa,QAAb,GAAwB,KAAK5B,MAAL,CAAY4B,QAApC;AACA,eAAKhB,OAAL,CAAaiB,KAAb,CAAmB,KAAKd,OAAxB,EAAiCb,SAAjC,CACE,UAAAC,IAAI,EAAI;AACN,kBAAI,CAACH,MAAL,GAAcG,IAAd;;AACA,kBAAI,CAACJ,MAAL,CAAY+B,UAAZ,CAAuB3B,IAAvB;AACD,WAJH,EAKE,UAAAsB,KAAK;AAAA,mBAAI,MAAI,CAACC,OAAL,GAAeD,KAAK,CAACC,OAAzB;AAAA,WALP,EAME;AAAA,mBAAM,MAAI,CAACK,KAAL,EAAN;AAAA,WANF;AAQD;;;+BAEMC,G,EAAa;AAClBC,iBAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,kBAAQA,GAAR;AACE,iBAAK,SAAL;AACE,mBAAKG,OAAL,GAAe,IAAf;AACA,mBAAKC,QAAL,GAAgB,KAAhB;AACA,mBAAKC,QAAL,GAAgB,KAAhB;AACA,mBAAKC,KAAL,GAAa,KAAb;AACA;;AACF,iBAAK,UAAL;AACE,mBAAKH,OAAL,GAAe,KAAf;AACA,mBAAKC,QAAL,GAAgB,IAAhB;AACA,mBAAKC,QAAL,GAAgB,KAAhB;AACA,mBAAKC,KAAL,GAAa,KAAb;AACA;;AACF,iBAAK,UAAL;AACE,mBAAKH,OAAL,GAAe,KAAf;AACA,mBAAKC,QAAL,GAAgB,KAAhB;AACA,mBAAKC,QAAL,GAAgB,IAAhB;AACA,mBAAKC,KAAL,GAAa,KAAb;AACA;;AACF,iBAAK,OAAL;AACE,mBAAKH,OAAL,GAAe,KAAf;AACA,mBAAKC,QAAL,GAAgB,KAAhB;AACA,mBAAKC,QAAL,GAAgB,KAAhB;AACA,mBAAKC,KAAL,GAAa,IAAb;AACA;AAxBJ;AA0BD;;;0CAEiBC,I,EAAc;AAC9B,eAAKvB,WAAL,CAAiBwB,QAAjB,GAA4B,KAAKxC,MAAL,CAAYX,EAAxC;AACA,eAAK2B,WAAL,CAAiByB,WAAjB,GAA+BF,IAA/B;AACD;;;uCAEcG,Y,EAAsBC,a,EAAuB;AAC1D,eAAK3B,WAAL,CAAiB4B,eAAjB,GAAmCF,YAAnC;AACA,eAAK1B,WAAL,CAAiB2B,aAAjB,GAAiCA,aAAjC;AACD;;;uCAEc;AAAA;;AACb,eAAK/B,OAAL,CAAauB,OAAb,CAAqB,KAAKnB,WAA1B,EAAuCd,SAAvC,CACE,UAAAC,IAAI;AAAA,mBAAI,MAAI,CAACJ,MAAL,CAAY+B,UAAZ,CAAuB3B,IAAvB,CAAJ;AAAA,WADN;AAGA,eAAK4B,KAAL;AACD;;;wCAEe;AAAA;;AACd,eAAKnB,OAAL,CAAawB,QAAb,CAAsB,KAAKpB,WAA3B,EAAwCd,SAAxC,CACE,UAAAC,IAAI;AAAA,mBAAI,MAAI,CAACJ,MAAL,CAAY+B,UAAZ,CAAuB3B,IAAvB,CAAJ;AAAA,WADN;AAGA,eAAK4B,KAAL;AACD;;;wCAEe;AAAA;;AACd,eAAKnB,OAAL,CAAayB,QAAb,CAAsB,KAAKrB,WAA3B,EAAwCd,SAAxC,CACE,UAAAC,IAAI;AAAA,mBAAI,MAAI,CAACJ,MAAL,CAAY+B,UAAZ,CAAuB3B,IAAvB,CAAJ;AAAA,WADN;AAGA,eAAK4B,KAAL;AACD;;;0CAEiB;AAAA;;AAChB,eAAKf,WAAL,CAAiBwB,QAAjB,GAA4B,KAAKxC,MAAL,CAAYX,EAAxC;AACA,eAAKuB,OAAL,CAAaiC,eAAb,CAA6B,KAAK7B,WAAlC,EAA+Cd,SAA/C,CACE,UAAAC,IAAI;AAAA,mBAAI,MAAI,CAACJ,MAAL,CAAY+B,UAAZ,CAAuB3B,IAAvB,CAAJ;AAAA,WADN;AAGA,eAAK4B,KAAL;AACD;;;gCAEO;AACN,eAAKhB,OAAL,GAAe,EAAf;AACA,eAAKG,gBAAL,GAAwB,EAAxB;AACA,eAAKD,cAAL,GAAsB,EAAtB;AACA,eAAKD,WAAL,GAAmB,EAAnB;AACA,eAAKU,OAAL,GAAe,EAAf;AACD;;;;;;;uBAxHUf,kB,EAAkB,0I,EAAA,sJ,EAAA,gJ,EAAA,uH;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,a;AAAA,g7B;AAAA;AAAA;ACf/B;;AAEI;;AAEI;;AAEI;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAO;;AACf;;AACJ;;AACA;;AACI;;AAIJ;;AACJ;;AACJ;;AAEA;;AAiBA;;AAwBA;;AAwBA;;AAyCA;;AAmBJ;;AAEA;;AACI;;AAA8C;AAAA,mBAAS,IAAAQ,MAAA,CAAO,SAAP,CAAT;AAA0B,WAA1B;;AAA4B;;AAC1B;;AAAO;;AACvD;;AAA8C;AAAA,mBAAS,IAAAA,MAAA,CAAO,UAAP,CAAT;AAA2B,WAA3B;;AAA6B;;AAC7B;;AAAQ;;AACtD;;AAA8C;AAAA,mBAAS,IAAAA,MAAA,CAAO,UAAP,CAAT;AAA2B,WAA3B;;AAA6B;;AAC7B;;AAAQ;;AACtD;;AAA8C;AAAA,mBAAS,IAAAA,MAAA,CAAO,OAAP,CAAT;AAAwB,WAAxB;;AAA0B;;AAC1B;;AAAK;;AACvD;;AAEJ;;AAjKJ;;;;AAe4B;;AAAA;;AAQX;;AAAA;;AAiBA;;AAAA;;AAwBA;;AAAA;;AAwBA;;AAAA;;AAyCA;;AAAA;;;;;;;;;sEDlHJR,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTP,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMQ;;AACI;;AAAG;;AAAW;;AAClB;;;;;;AADO;;AAAA;;;;QDAFwC,a;AAKX,6BAAoBlC,OAApB,EAAkDC,UAAlD,EAAyFd,MAAzF,EAAyHe,MAAzH,EAAyI;AAAA;;AAArH,aAAAF,OAAA,GAAAA,OAAA;AAA8B,aAAAC,UAAA,GAAAA,UAAA;AAAuC,aAAAd,MAAA,GAAAA,MAAA;AAAgC,aAAAe,MAAA,GAAAA,MAAA;AAHzH,aAAAC,OAAA,GAAmB,EAAnB;AAG4I;;;;mCAEpI,CACP;;;gCAEO;AAAA;;AACN,eAAKH,OAAL,CAAaiB,KAAb,CAAmB,KAAKd,OAAxB,EAAiCb,SAAjC,CACE,UAAAC,IAAI,EAAI;AACR,kBAAI,CAACJ,MAAL,CAAY+B,UAAZ,CAAuB3B,IAAvB;;AACA,kBAAI,CAACW,MAAL,CAAYiC,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD,WAJD,EAKE,UAAAtB,KAAK;AAAA,mBAAI,MAAI,CAACC,OAAL,GAAeD,KAAK,CAACC,OAAzB;AAAA,WALP,EAME;AAAA,mBAAM,MAAI,CAACK,KAAL,EAAN;AAAA,WANF;AAQD;;;gCAEO;AACN,eAAKhB,OAAL,GAAe,EAAf;AACA,eAAKW,OAAL,GAAe,EAAf;AACD;;;;;;;uBAxBUoB,a,EAAa,mI,EAAA,+I,EAAA,yI,EAAA,uH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,0W;AAAA;AAAA;ACZ1B;;AACI;;AACI;;AAAI;;AAAO;;AACX;;AACI;;AAAO;AAAA;AAAA;;AAAP;;AACA;;AAAkD;;AAAO;;AAAK;;AAClE;;AACA;;AACI;;AAAO;AAAA;AAAA;;AAAP;;AACA;;AAA8C;;AAAO;;AAAQ;;AACjE;;AACA;;AAGA;;AACI;;AAAsB;AAAA,mBAAS,IAAAjB,KAAA,EAAT;AAAgB,WAAhB;;AAAyD;;AAAK;;AACxF;;AACJ;;AACJ;;;;AAdmB;;AAAA;;AAIA;;AAAA;;AAGN;;AAAA;;;;;;;;;sEDCAiB,a,EAAa;cALzB,uDAKyB;eALf;AACT1C,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYa0C,e;AAIX,+BAAoBpC,OAApB,EAAkDb,MAAlD,EAAkFe,MAAlF,EAAkG;AAAA;;AAA9E,aAAAF,OAAA,GAAAA,OAAA;AAA8B,aAAAb,MAAA,GAAAA,MAAA;AAAgC,aAAAe,MAAA,GAAAA,MAAA;AAFlF,aAAAC,OAAA,GAAmB,EAAnB;AAEqG;;;;mCAE7F;AAAA;;AACN,eAAKhB,MAAL,CAAYE,OAAZ,CAAoBC,SAApB,CACE,UAAAC,IAAI,EAAI;AACN,kBAAI,CAACY,OAAL,CAAakC,SAAb,GAAyB9C,IAAI,CAAC8C,SAA9B;AACA,kBAAI,CAAClC,OAAL,CAAamC,QAAb,GAAwB/C,IAAI,CAAC+C,QAA7B;AACA,kBAAI,CAACnC,OAAL,CAAaY,KAAb,GAAqBxB,IAAI,CAACwB,KAA1B;AACA,kBAAI,CAACZ,OAAL,CAAaa,QAAb,GAAwBzB,IAAI,CAACyB,QAA7B;AACD,WANH;AAQD;;;iCAEK;AAAA;;AACJ,eAAKhB,OAAL,CAAauC,MAAb,CAAoB,KAAKpC,OAAzB,EAAkCb,SAAlC,CAA4C,UAAAC,IAAI,EAAI;AAClD,mBAAI,CAACJ,MAAL,CAAY+B,UAAZ,CAAuB3B,IAAvB;;AACA,mBAAI,CAACW,MAAL,CAAYiC,QAAZ,CAAqB,CAAC,MAAD,CAArB;AACD,WAHD;AAID;;;;;;;uBAtBUC,e,EAAe,0I,EAAA,gJ,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,iP;AAAA;AAAA;ACZ5B;;AACI;;AACI;;AAAI;;AAA8E;;AAClF;;AACI;;AAAsB;AAAA,mBAAS,IAAAG,MAAA,EAAT;AAAiB,WAAjB;;AAA2D;;AAAyE;;AAAG;;AACjK;;AACJ;;AACJ;;;;AALY;;AAAA;;;;;;;;sEDUCH,e,EAAe;cAL3B,uDAK2B;eALjB;AACT5C,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACWM;;AACE;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACA;;AAAkD;;AAAO;;AAAU;;AACrE;;;;;;AAFS;;AAAA;;;;;;;;AAGT;;AACE;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACA;;AAA8C;;AAAO;;AAAS;;AAChE;;;;;;AAFS;;AAAA;;;;;;AAKP;;AAAoB;;AAAc;;;;;;AAAd;;AAAA;;;;;;;;AACpB;;AAAmB;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAgE;;AAA1F;;;;;;AAA0B;;AAAA;;;;;;AAI1B;;AAAoB;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;;;AACpB;;AAAmB;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAoE;;AAA9F;;;;;;AAA0B;;AAAA;;;;;;AAI1B;;AAAoB;;AAAgB;;;;;;AAAhB;;AAAA;;;;;;;;AACpB;;AAAmB;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAkE;;AAA5F;;;;;;AAA0B;;AAAA;;;;;;;;AAE5B;;AAAiB;;AAAkE;AAAA;;AAAA;;AAAA,gCAAgB,MAAhB;AAAsB,SAAtB;;AAAyB;;AAC5G;;;;;;;;AACA;;AAAgB;;AAAoE;AAAA;;AAAA;;AAAA,yBAAgB,MAAhB;AAAyB,iBAAH,qBAAG;AAAH,SAAtB;;AAAwC;;AAC1H;;AAAyE;AAAA;;AAAA;;AAAA,yBAAgB,MAAhB;AAAyB,iBAAH,uBAAG;AAAH,SAAtB;;AAA0C;;AAAI;;;;QDxBlH8C,gB;AAOX,gCAAoBxC,OAApB,EAAkDC,UAAlD,EAAyFd,MAAzF,EAAyHe,MAAzH,EAAyI;AAAA;;AAArH,aAAAF,OAAA,GAAAA,OAAA;AAA8B,aAAAC,UAAA,GAAAA,UAAA;AAAuC,aAAAd,MAAA,GAAAA,MAAA;AAAgC,aAAAe,MAAA,GAAAA,MAAA;AALzH,aAAAd,MAAA,GAAwB,EAAxB;AACA,aAAAe,OAAA,GAAmB,EAAnB;AACA,aAAAsC,IAAA,GAAgB,KAAhB;AAG4I;;;;mCAEpI;AAAA;;AACN,eAAKtD,MAAL,CAAYE,OAAZ,CAAoBC,SAApB,CACE,UAAAC,IAAI,EAAI;AACN,mBAAI,CAACH,MAAL,GAAcG,IAAd;AACA,mBAAI,CAACY,OAAL,CAAakC,SAAb,GAAyB9C,IAAI,CAAC8C,SAA9B;AACA,mBAAI,CAAClC,OAAL,CAAamC,QAAb,GAAwB/C,IAAI,CAAC+C,QAA7B;AACA,mBAAI,CAACnC,OAAL,CAAauC,GAAb,GAAmBnD,IAAI,CAACmD,GAAxB;AACA,mBAAI,CAACvC,OAAL,CAAawC,OAAb,GAAuBpD,IAAI,CAACoD,OAA5B;AACA,mBAAI,CAACxC,OAAL,CAAaY,KAAb,GAAqBxB,IAAI,CAACwB,KAA1B;AACA,mBAAI,CAACZ,OAAL,CAAaa,QAAb,GAAwBzB,IAAI,CAACyB,QAA7B;AACA,mBAAI,CAACb,OAAL,CAAayC,WAAb,GAA2BrD,IAAI,CAACqD,WAAhC;AACD,WAVH;AAYD;;;kCAES;AAAA;;AACR,eAAKzC,OAAL,CAAaY,KAAb,GAAqB,KAAK3B,MAAL,CAAY2B,KAAjC;AACA,eAAKZ,OAAL,CAAaa,QAAb,GAAwB,KAAK5B,MAAL,CAAY4B,QAApC;AACA,eAAKhB,OAAL,CAAaiB,KAAb,CAAmB,KAAKd,OAAxB,EAAiCb,SAAjC,CACE,UAAAC,IAAI;AAAA,mBAAI,OAAI,CAACJ,MAAL,CAAY+B,UAAZ,CAAuB3B,IAAvB,CAAJ;AAAA,WADN,EAEE,UAAAsB,KAAK;AAAA,mBAAI,OAAI,CAACC,OAAL,GAAeD,KAAK,CAACC,OAAzB;AAAA,WAFP;AAID;;;+BAEM+B,I,EAAc;AACnB,kBAAQA,IAAR;AACE,iBAAK,MAAL;AACE,mBAAKJ,IAAL,GAAY,IAAZ;AACA;;AACF,iBAAK,MAAL;AACE,mBAAKA,IAAL,GAAY,KAAZ;AACA;AANJ;AAQD;;;sCAEU;AAAA;;AACT,eAAKzC,OAAL,CAAa8C,WAAb,CAAyB,KAAK3C,OAA9B,EAAuCb,SAAvC,CAAiD,UAAAC,IAAI,EAAI;AACvD,mBAAI,CAACH,MAAL,GAAcG,IAAd;;AACA,mBAAI,CAACJ,MAAL,CAAY+B,UAAZ,CAAuB3B,IAAvB;AACD,WAHD;AAID;;;wCAEY;AACX,eAAKwD,OAAL;AACD;;;gCAEO;AACN,eAAK5C,OAAL,GAAe,EAAf;AACA,eAAKW,OAAL,GAAe,EAAf;AACD;;;;;;;uBA1DU0B,gB,EAAgB,0I,EAAA,sJ,EAAA,gJ,EAAA,uH;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,c;AAAA,2uC;AAAA;AAAA;ACZ7B;;AAEE;;AACE;;AACE;;AACA;;AACE;;AAAI;;AAA4E;;AAClF;;AACF;;AACA;;AACE;;AAIA;;AAIA;;AACE;;AACA;;AACA;;AACF;;AACA;;AACE;;AACA;;AACA;;AACF;;AACA;;AACE;;AACA;;AACA;;AACF;;AACA;;AAEA;;AAEA;;AAEA;;AAAoB;;AAAG;;AAAiE;;AAAM;;AAAI;;AAClG;;AAAG;;AAAK;;AACR;;AACE;;AAA8E;;AAAsB;;AACtG;;AACA;;AACA;;AACF;;AACF;;AAAM;;AA/CR;;;;AAMY;;AAAA;;AAID;;AAAA;;AAIA;;AAAA;;AAMG;;AAAA;;AACA;;AAAA;;AAIA;;AAAA;;AACA;;AAAA;;AAIA;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAEA;;AAAA;;AAO6E;;AAAA;;;;;;;;;sED9BzEA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACThD,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC8BQ;;AACI;;AAAG;;AAAW;;AAClB;;;;;;AADO;;AAAA;;;;QDtBFsD,iB;AAKX,iCAAoBhD,OAApB,EAAkDC,UAAlD,EAAiF;AAAA;;AAA7D,aAAAD,OAAA,GAAAA,OAAA;AAA8B,aAAAC,UAAA,GAAAA,UAAA;AAHlD,aAAAb,MAAA,GAAwB,EAAxB;AAGoF;;;;mCAE5E,CACP;;;mCAEU;AAAA;;AACT,eAAKY,OAAL,CAAaiD,QAAb,CAAsB,KAAK7D,MAA3B,EAAmCE,SAAnC,CACE,UAAAC,IAAI;AAAA,mBAAI8B,OAAO,CAACC,GAAR,CAAY/B,IAAZ,CAAJ;AAAA,WADN,EAEE,UAAAsB,KAAK;AAAA,mBAAI,OAAI,CAACC,OAAL,GAAeD,KAAK,CAACC,OAAzB;AAAA,WAFP,EAGE;AAAA,mBAAM,OAAI,CAACK,KAAL,EAAN;AAAA,WAHF;AAKD;;;gCAEO;AACN,eAAK/B,MAAL,GAAc,EAAd;AACA,eAAK0B,OAAL,GAAe,EAAf;AACD;;;;;;;uBArBUkC,iB,EAAiB,0I,EAAA,sJ;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,2X;AAAA;AAAA;ACV9B;;AACI;;AACI;;AAAI;;AAAyB;;AAC7B;;AACI;;AAAO;AAAA;AAAA;;AAAP;;AACA;;AAAkD;;AAAO;;AAAS;;AACtE;;AACA;;AACI;;AAAO;AAAA;AAAA;;AAAP;;AACA;;AAA8C;;AAAO;;AAAQ;;AACjE;;AACA;;AACI;;AAAO;AAAA;AAAA;;AAAP;;AACA;;AAA8C;;AAAO;;AAAO;;AAChE;;AACA;;AACI;;AAAO;AAAA;AAAA;;AAAP;;AACA;;AAA8C;;AAAO;;AAAiB;;AAC1E;;AACA;;AACI;;AAAO;AAAA;AAAA;;AAAP;;AACA;;AAAkD;;AAAO;;AAAK;;AAClE;;AACA;;AACI;;AAAO;AAAA;AAAA;;AAAP;;AACA;;AAA8C;;AAAO;;AAAQ;;AACjE;;AACA;;AACI;;AAAO;AAAA;AAAA;;AAAP;;AACA;;AAAkD;;AAAO;;AAAa;;AAC1E;;AACA;;AAGA;;AACI;;AAAsB;AAAA,mBAAS,IAAAC,QAAA,EAAT;AAAmB,WAAnB;;AAA4D;;AAAQ;;AAC9F;;AACJ;;AACJ;;;;AAlCmB;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAGN;;AAAA;;;;;;;;;sEDrBAD,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTxD,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOawD,c;AAHb;AAAA;;AAKE,aAAAC,WAAA,GAA6B,EAA7B;AAEO,aAAAC,WAAA,GAAc,IAAI,4CAAJ,EAAd;AAEC,aAAAC,QAAA,GAAW,IAAI,oDAAJ,CAAmC,KAAKF,WAAxC,CAAX;AAMD,aAAA9D,OAAA,GAAU,KAAKgE,QAAL,CAAcC,YAAd,EAAV;AACR;;;;mCALmBlE,M,EAAqB;AACrC,eAAKiE,QAAL,CAAcE,IAAd,CAAmBnE,MAAnB;AACD;;;;;;;uBAVU8D,c;AAAc,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVM,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;ACJ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,W;AAEX,2BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;iCAEzBtE,M,EAAqB;AACnC,iBAAO,KAAKsE,IAAL,CAAUC,IAAV,WAAiC,sEAAYC,OAA7C,cAAwD,sEAAYC,WAApE,GAAmFzE,MAAnF,CAAP;AACD;;;8BAEYe,O,EAAgB;AAC3B,iBAAO,KAAKuD,IAAL,CAAUC,IAAV,WAAiC,sEAAYC,OAA7C,cAAwD,sEAAYE,QAApE,GAAgF3D,OAAhF,CAAP;AACD;;;+BAEaA,O,EAAgB;AAC5B,iBAAO,KAAKuD,IAAL,CAAUC,IAAV,WAAiC,sEAAYC,OAA7C,cAAwD,sEAAYG,SAApE,GAAiF5D,OAAjF,CAAP;AACD;;;wCAEsBC,W,EAAwB;AAC7C,iBAAO,KAAKsD,IAAL,CAAUC,IAAV,WAAiC,sEAAYC,OAA7C,cAAwD,sEAAYI,QAApE,GAAgF5D,WAAhF,CAAP;AACD;;;oCAEkBD,O,EAAgB;AACjC,iBAAO,KAAKuD,IAAL,CAAUO,GAAV,WAAgC,sEAAYL,OAA5C,cAAuD,sEAAYM,OAAnE,GAA8E/D,OAA9E,CAAP;AACD;;;gCAEcC,W,EAAwB;AACrC,iBAAO,KAAKsD,IAAL,CAAUO,GAAV,WAAgC,sEAAYL,OAA5C,cAAuD,sEAAYO,UAAnE,GAAiF/D,WAAjF,CAAP;AACD;;;iCAEeA,W,EAAwB;AACtC,iBAAO,KAAKsD,IAAL,CAAUO,GAAV,WAAgC,sEAAYL,OAA5C,cAAuD,sEAAYQ,WAAnE,GAAkFhE,WAAlF,CAAP;AACD;;;iCAEeA,W,EAAwB;AACtC,iBAAO,KAAKsD,IAAL,CAAUO,GAAV,WAAgC,sEAAYL,OAA5C,cAAuD,sEAAYS,WAAnE,GAAkFjE,WAAlF,CAAP;AACD;;;;;;;uBAlCUqD,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVD,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACZxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKac,iB,GAEX,6BAAc;AAAA;AAAG,K;;;uBAFNA,iB;AAAiB,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVd,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;ACL9B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMe,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzBZ,aAAO,EAAE,8BAFgB;AAGzBC,iBAAW,EAAE,UAHY;AAIzBC,cAAQ,EAAE,OAJe;AAKzBC,eAAS,EAAE,QALc;AAMzBC,cAAQ,EAAE,OANe;AAOzBE,aAAO,EAAE,MAPgB;AAQzBC,gBAAU,EAAE,SARa;AASzBC,iBAAW,EAAE,UATY;AAUzBC,iBAAW,EAAE;AAVY,KAApB;AAaP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACxBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYG,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIrD,OAAO,CAACR,KAAR,CAAc6D,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { RegisterComponent } from './components/register/register.component';\n\n\nconst routes: Routes = [\n  {path: \"home\", component: HomeComponent},\n  {path: \"dashboard\", component: DashboardComponent},\n  {path: \"register\", component: RegisterComponent},\n  {path: \"profile\", component: ProfileComponent},\n  {path: \"logout\", component: LogoutComponent},\n  {path: \"**\", pathMatch: \"full\", redirectTo: \"home\"},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { SubjectService } from './services/subject.service';\r\nimport { AccountHolder } from './models/account-holder';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  \r\n  holder: AccountHolder = {} as AccountHolder;\r\n  \r\n  constructor(private memory: SubjectService) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.memory.session.subscribe(data => this.holder = data);\r\n  }\r\n  \r\n}\r\n","<!-- Header -->\r\n<header class=\"w3-display-container w3-content\" style=\"max-width:90%\">\r\n  <img class=\"w3-image\" src=\"assets/images/building.jpg\" alt=\"London\" width=\"1500\" height=\"700\">\r\n  <div class=\"w3-display-middle\" style=\"width:65%\">\r\n    <div class=\"w3-bar w3-black\">\r\n      <button *ngIf=\"!holder.loggedin\" class=\"w3-bar-item w3-button tablink\" routerLink=\"/home\"><i\r\n          class=\"fa fa-plane w3-margin-right\"></i>LOGIN</button>\r\n      <button *ngIf=\"!holder.loggedin\" class=\"w3-bar-item w3-button tablink\" routerLink=\"/register\"><i\r\n          class=\"fa fa-bed w3-margin-right\"></i>REGISTER</button>\r\n      <button *ngIf=\"holder.loggedin\" class=\"w3-bar-item w3-button tablink\" routerLink=\"/dashboard\"><i\r\n          class=\"fa fa-car w3-margin-right\"></i>DASHBOARD</button>\r\n      <button *ngIf=\"holder.loggedin\" class=\"w3-bar-item w3-button tablink\" routerLink=\"/profile\"><i\r\n          class=\"fa fa-car w3-margin-right\"></i>PROFILE</button>\r\n      <button *ngIf=\"holder.loggedin\" class=\"w3-bar-item w3-button tablink\" routerLink=\"/logout\"><i\r\n          class=\"fa fa-car w3-margin-right\"></i>SIGN-OUT</button>\r\n    </div>\r\n\r\n    <!-- Tabs -->\r\n    <div class=\"w3-container w3-white w3-padding-16 myLink\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n\r\n  </div>\r\n</header>\r\n\r\n<!-- Page content -->\r\n<div class=\"w3-content\" style=\"max-width:1100px;\">\r\n\r\n  <!-- Newsletter -->\r\n  <div class=\"w3-container\">\r\n    <div class=\"w3-panel w3-padding-16 w3-black w3-opacity w3-card w3-hover-opacity-off\">\r\n      <h2>Get the best offers first!</h2>\r\n      <p>Join our newsletter.</p>\r\n      <label>E-mail</label>\r\n      <input class=\"w3-input w3-border\" type=\"text\" placeholder=\"Your Email address\">\r\n      <button type=\"button\" class=\"w3-button w3-red w3-margin-top\">Subscribe</button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Contact -->\r\n  <div class=\"w3-container\">\r\n    <h2>Contact</h2>\r\n    <p>Let us book your next trip!</p>\r\n    <i class=\"fa fa-map-marker\" style=\"width:30px\"></i> Chicago, US<br>\r\n    <i class=\"fa fa-phone\" style=\"width:30px\"></i> Phone: +00 151515<br>\r\n    <i class=\"fa fa-envelope\" style=\"width:30px\"> </i> Email: mail@mail.com<br>\r\n    <form action=\"/action_page.php\" target=\"_blank\">\r\n      <p><input class=\"w3-input w3-padding-16 w3-border\" type=\"text\" placeholder=\"Name\" required name=\"Name\"></p>\r\n      <p><input class=\"w3-input w3-padding-16 w3-border\" type=\"text\" placeholder=\"Email\" required name=\"Email\"></p>\r\n      <p><input class=\"w3-input w3-padding-16 w3-border\" type=\"text\" placeholder=\"Message\" required name=\"Message\"></p>\r\n      <p><button class=\"w3-button w3-black w3-padding-large\" type=\"submit\">SEND MESSAGE</button></p>\r\n    </form>\r\n  </div>\r\n\r\n  <!-- End page content -->\r\n</div>\r\n\r\n<!-- Footer -->\r\n<footer class=\"w3-container w3-center w3-opacity w3-margin-bottom\">\r\n  <h5>Find Us On</h5>\r\n  <div class=\"w3-xlarge w3-padding-16\">\r\n    <i class=\"fa fa-facebook-official w3-hover-opacity\"></i>\r\n    <i class=\"fa fa-instagram w3-hover-opacity\"></i>\r\n    <i class=\"fa fa-snapchat w3-hover-opacity\"></i>\r\n    <i class=\"fa fa-pinterest-p w3-hover-opacity\"></i>\r\n    <i class=\"fa fa-twitter w3-hover-opacity\"></i>\r\n    <i class=\"fa fa-linkedin w3-hover-opacity\"></i>\r\n  </div>\r\n  <p>Powered by <a href=\"https://www.w3schools.com/w3css/default.asp\" target=\"_blank\"\r\n      class=\"w3-hover-text-green\">w3.css</a></p>\r\n</footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { UserService } from './services/user.service';\r\nimport { ValidationService } from './services/validation.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LogoutComponent } from './components/logout/logout.component';\r\nimport { SubjectService } from './services/subject.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    DashboardComponent,\r\n    RegisterComponent,\r\n    LogoutComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    UserService,\r\n    ValidationService,\r\n    SubjectService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { AccountHolder } from '../../models/account-holder';\nimport { Account } from '../../models/account';\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ValidationService } from 'src/app/services/validation.service';\nimport { SubjectService } from 'src/app/services/subject.service';\nimport { Profile } from '../../models/profile';\nimport { Transaction } from '../../models/transaction';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  holder: AccountHolder = {} as AccountHolder;\n  profile: Profile = {} as Profile;\n  transaction: Transaction = {} as Transaction;\n  creditAccounts: Account[] = [];\n  bankkingAccounts: Account[] = [];\n  deposit: boolean;\n  withdraw: boolean;\n  transfer: boolean;\n  apply: boolean;\n  message: string;\n\n  constructor(private service: UserService, private validation: ValidationService, private memory: SubjectService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.toggle('deposit');\n    this.memory.session.subscribe(\n      data => {\n        this.holder = data;\n        if (data.accounts)\n          data.accounts.forEach(account => {\n            if (account.credit)\n              this.creditAccounts.push(account);\n            else\n              this.bankkingAccounts.push(account);\n          });\n      },\n      error => this.message = error.error.message\n    );\n  }\n\n  getInfo() {\n    this.profile.email = this.holder.email;\n    this.profile.password = this.holder.password;\n    this.service.login(this.profile).subscribe(\n      data => {\n        this.holder = data;\n        this.memory.setSession(data);\n      },\n      error => this.message = error.message,\n      () => this.reset()\n    );\n  }\n\n  toggle(tab: string) {\n    console.log(tab)\n    switch (tab) {\n      case \"deposit\":\n        this.deposit = true;\n        this.withdraw = false;\n        this.transfer = false;\n        this.apply = false;\n        break;\n      case \"withdraw\":\n        this.deposit = false;\n        this.withdraw = true;\n        this.transfer = false;\n        this.apply = false;\n        break;\n      case \"transfer\":\n        this.deposit = false;\n        this.withdraw = false;\n        this.transfer = true;\n        this.apply = false;\n        break;\n      case \"apply\":\n        this.deposit = false;\n        this.withdraw = false;\n        this.transfer = false;\n        this.apply = true;\n        break;\n    }\n  }\n\n  selectTransaction(name: string) {\n    this.transaction.holderId = this.holder.id;\n    this.transaction.accountName = name;\n  }\n\n  selectTransfer(transferName: string, receiverEmail: string) {\n    this.transaction.transferAccount = transferName;\n    this.transaction.receiverEmail = receiverEmail;\n  }\n\n  depositMoney() {\n    this.service.deposit(this.transaction).subscribe(\n      data => this.memory.setSession(data)\n    )\n    this.reset();\n  }\n\n  withdrawMoney() {\n    this.service.withdraw(this.transaction).subscribe(\n      data => this.memory.setSession(data)\n    )\n    this.reset();\n  }\n\n  transferMoney() {\n    this.service.transfer(this.transaction).subscribe(\n      data => this.memory.setSession(data)\n    )\n    this.reset();\n  }\n\n  applyForAccount() {\n    this.transaction.holderId = this.holder.id;\n    this.service.applyForAccount(this.transaction).subscribe(\n      data => this.memory.setSession(data)\n    )\n    this.reset();\n  }\n\n  reset() {\n    this.profile = {} as Profile;\n    this.bankkingAccounts = [];\n    this.creditAccounts = [];\n    this.transaction = {} as Transaction;\n    this.message = \"\";\n  }\n}\n","<div class=\"w3-center\">\n\n    <div class=\"w3-container w3-white w3-padding-16 myLink\">\n\n        <div class=\"w3-container\">\n\n            <div class=\"w3-responsive w3-card-4\">\n                <table class=\"w3-table w3-striped w3-bordered\">\n                    <thead>\n                        <tr class=\"w3-blue\">\n                            <th>Banking Account(s)</th>\n                            <th>Balance</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let banking of bankkingAccounts\">\n                            <td>{{banking.name}}</td>\n                            <td>{{banking.balance}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <div *ngIf=\"creditAccounts.length > 0\" class=\"w3-responsive w3-card-4\">\n                <table class=\"w3-table w3-striped w3-bordered\">\n                    <thead>\n                        <tr class=\"w3-blue\">\n                            <th>Credit Account(s)</th>\n                            <th>Balance</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let credit of creditAccounts\">\n                            <td>{{credit.name}}</td>\n                            <td>{{credit.balance}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <div *ngIf=\"deposit\" class=\"w3-section\">\n                <div class=\"w3-container w3-card-4\">\n                    <h5>Select an account</h5>\n                    <div class=\"w3-third\">\n                        <table class=\"w3-table w3-striped w3-bordered\">\n                            <tbody>\n                                <tr *ngFor=\"let account of holder.accounts\" class=\"w3-black\">\n                                    <td class=\"w3-bar-item w3-button tablink\" (click)=\"selectTransaction(account.name)\">\n                                        {{account.name}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <div class=\"w3-half\">\n                            <input [(ngModel)]=\"transaction.amount\" class=\"w3-input\" type=\"text\" required>\n                            <i class=\"fa fa-envelope\" style=\"width:30px\"> </i><label>Amount</label>\n                        </div>\n                        <div class=\"w3-center\">\n                            <button type=\"button\" class=\"w3-button w3-teal w3-margin-top\" (click)=\"depositMoney()\">Send\n                                money</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"withdraw\" class=\"w3-section\">\n                <div class=\"w3-container w3-card-4\">\n                    <h5>Select an account</h5>\n                    <div class=\"w3-third\">\n                        <table class=\"w3-table w3-striped w3-bordered\">\n                            <tbody>\n                                <tr *ngFor=\"let account of holder.accounts\" class=\"w3-black\">\n                                    <td class=\"w3-bar-item w3-button tablink\" (click)=\"selectTransaction(account.name)\">\n                                        {{account.name}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <div class=\"w3-half\">\n                            <input [(ngModel)]=\"transaction.amount\" class=\"w3-input\" type=\"text\" required>\n                            <i class=\"fa fa-envelope\" style=\"width:30px\"> </i><label>Amount</label>\n                        </div>\n                        <div class=\"w3-center\">\n                            <button type=\"button\" class=\"w3-button w3-teal w3-margin-top\" (click)=\"withdrawMoney()\">Get\n                                money</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"transfer\" class=\"w3-section\">\n                <div class=\"w3-container w3-card-4\">\n                    <div class=\"w3-half\">\n                        <h5>Select an account from</h5>\n                        <table class=\"w3-table w3-striped w3-bordered\">\n                            <tbody>\n                                <tr *ngFor=\"let account of holder.accounts\" class=\"w3-black\">\n                                    <td class=\"w3-bar-item w3-button tablink\" (click)=\"selectTransaction(account.name)\">\n                                        {{account.name}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <div class=\"w3-half\">\n                        <h5>Select an account to</h5>\n                        <table class=\"w3-table w3-striped w3-bordered\">\n                            <tbody>\n                                <tr *ngFor=\"let account of holder.accounts\" class=\"w3-black\">\n                                    <td class=\"w3-bar-item w3-button tablink\"\n                                        (click)=\"selectTransfer(account.name, null)\">{{account.name}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <hr>\n                        <h5>or enter email and use Zelle</h5>\n                        <div class=\"w3-center\">\n                            <input [(ngModel)]=\"transaction.receiverEmail\" class=\"w3-input\" type=\"text\" required>\n                            <i class=\"fa fa-envelope\" style=\"width:30px\"> </i><label>Email</label>\n                        </div>\n                    </div>\n                    <div class=\"w3-half\">\n                        <input [(ngModel)]=\"transaction.amount\" class=\"w3-input\" type=\"text\" required>\n                        <i class=\"fa fa-envelope\" style=\"width:30px\"> </i><label>Amount</label>\n                    </div>\n                    <div class=\"w3-center\">\n                        <button type=\"button\" class=\"w3-button w3-teal w3-margin-top\" (click)=\"transferMoney()\">Send\n                            money</button>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"apply\" class=\"w3-section\">\n                <div class=\"w3-container w3-card-4\">\n                    <h5>Apply for an account</h5>\n                    <div class=\"w3-third\">\n                        <div class=\"w3-half\">\n                            <input [(ngModel)]=\"transaction.accountName\" class=\"w3-input\" type=\"text\" required>\n                            <i class=\"fa fa-envelope\" style=\"width:30px\"> </i><label>Account Name</label>                            \n                        </div>\n                        <div class=\"w3-center\">\n                            <input [(ngModel)]=\"transaction.credit\" class=\"w3-check\" type=\"checkbox\">\n                            <label>Credit account?</label>\n                            <br>\n                            <button type=\"button\" class=\"w3-button w3-teal w3-margin-top\"\n                                (click)=\"applyForAccount()\">Process</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n        <div class=\"w3-bar w3-black\">\n            <button class=\"w3-bar-item w3-button tablink\" (click)=\"toggle('deposit')\"><i\n                    class=\"fa fa-plane w3-margin-right\"></i>Deposit</button>\n            <button class=\"w3-bar-item w3-button tablink\" (click)=\"toggle('withdraw')\"><i\n                    class=\"fa fa-bed w3-margin-right\"></i>Withdraw</button>\n            <button class=\"w3-bar-item w3-button tablink\" (click)=\"toggle('transfer')\"><i\n                    class=\"fa fa-car w3-margin-right\"></i>Transfer</button>\n            <button class=\"w3-bar-item w3-button tablink\" (click)=\"toggle('apply')\"><i\n                    class=\"fa fa-car w3-margin-right\"></i>Apply</button>\n        </div>\n\n    </div>","import { UserService } from '../../services/user.service';\r\nimport { ValidationService } from '../../services/validation.service';\r\nimport { Profile } from '../../models/profile';\r\nimport { SubjectService } from '../../services/subject.service';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  profile: Profile = {} as Profile;\r\n  message: string;\r\n\r\n  constructor(private service: UserService, private validation: ValidationService, private memory: SubjectService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login() {\r\n    this.service.login(this.profile).subscribe(\r\n      data => {\r\n      this.memory.setSession(data);\r\n      this.router.navigate(['dashboard']);\r\n    },\r\n      error => this.message = error.message,\r\n      () => this.reset()\r\n    );\r\n  }\r\n\r\n  reset() {\r\n    this.profile = {} as Profile;\r\n    this.message = \"\";\r\n  }\r\n}\r\n","<div class=\"w3-half\">\n    <div class=\"w3-container w3-card-4\">\n        <h2>Sign-in</h2>\n        <div class=\"w3-section\">\n            <input [(ngModel)]=\"profile.email\" class=\"w3-input\" type=\"text\" required>\n            <i class=\"fa fa-envelope\" style=\"width:30px\"> </i><label>Email</label>\n        </div>\n        <div class=\"w3-section\">\n            <input [(ngModel)]=\"profile.password\" class=\"w3-input\" type=\"text\" required>\n            <i class=\"fa fa-lock\" style=\"width:30px\"> </i><label>Password</label>\n        </div>\n        <div *ngIf=\"message\" class=\"w3-section\">\n            <p>{{message}}</p>\n        </div>\n        <div class=\"w3-section\">\n            <button type=\"button\" (click)=\"login()\" class=\"w3-button w3-red w3-margin-top\">LOGIN</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SubjectService } from 'src/app/services/subject.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { Profile } from '../../models/profile';\nimport { AccountHolder } from '../../models/account-holder';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  profile: Profile = {} as Profile;\n\n  constructor(private service: UserService, private memory: SubjectService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.memory.session.subscribe(\n      data => {\n        this.profile.firstname = data.firstname;\n        this.profile.lastname = data.lastname;\n        this.profile.email = data.email;\n        this.profile.password = data.password;\n      }\n    );\n  }\n\n  logout(){\n    this.service.logout(this.profile).subscribe(data => {\n      this.memory.setSession(data);\n      this.router.navigate(['home']);\n    });\n  }\n\n}\n","<div class=\"w3-center\">\n    <div class=\"w3-container w3-card-4\">\n        <h4>Are you sure you want to sign out, {{profile.firstname}} {{profile.lastname}}?</h4>\n        <div class=\"w3-section\">\n            <button type=\"button\" (click)=\"logout()\" class=\"w3-button w3-grey w3-margin-top\"><i class=\"fa fa-check fa-fw w3-margin-right w3-large w3-text-green\"></i> Yes</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Profile } from 'src/app/models/profile';\r\nimport { SubjectService } from 'src/app/services/subject.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ValidationService } from 'src/app/services/validation.service';\r\nimport { AccountHolder } from '../../models/account-holder';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  holder: AccountHolder = {} as AccountHolder;\r\n  profile: Profile = {} as Profile;\r\n  edit: boolean = false;\r\n  message: string;\r\n\r\n  constructor(private service: UserService, private validation: ValidationService, private memory: SubjectService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.memory.session.subscribe(\r\n      data => {\r\n        this.holder = data;\r\n        this.profile.firstname = data.firstname;\r\n        this.profile.lastname = data.lastname;\r\n        this.profile.dob = data.dob;\r\n        this.profile.address = data.address;\r\n        this.profile.email = data.email;\r\n        this.profile.password = data.password;\r\n        this.profile.creditScore = data.creditScore;\r\n      }\r\n    );\r\n  }\r\n\r\n  getInfo() {\r\n    this.profile.email = this.holder.email;\r\n    this.profile.password = this.holder.password;\r\n    this.service.login(this.profile).subscribe(\r\n      data => this.memory.setSession(data),\r\n      error => this.message = error.message\r\n    );\r\n  }\r\n\r\n  toggle(mode: string) {\r\n    switch (mode) {\r\n      case \"edit\":\r\n        this.edit = true;\r\n        break;\r\n      case \"exit\":\r\n        this.edit = false;\r\n        break;\r\n    }\r\n  }\r\n\r\n  saveProfile(){\r\n    this.service.editProfile(this.profile).subscribe(data => {\r\n      this.holder = data;\r\n      this.memory.setSession(data);\r\n    });\r\n  }\r\n\r\n  cancelProfile(){\r\n    this.getInfo();\r\n  }\r\n\r\n  reset() {\r\n    this.profile = {} as Profile;\r\n    this.message = \"\";\r\n  }\r\n}\r\n","<!-- Left Column -->\r\n<div class=\"w3-center\">\r\n\r\n  <div class=\"w3-white w3-text-grey w3-card-4\">\r\n    <div class=\"w3-display-container\">\r\n      <img src=\"assets/images/profile.png\" style=\"width:30%\" alt=\"Avatar\">\r\n      <div class=\"w3-display-bottomleft w3-container w3-text-black\">\r\n        <h4>{{holder.firstname}} {{holder.lastname}}, active since {{holder.activeDate}}</h4>\r\n      </div>\r\n    </div>\r\n    <div class=\"w3-container\">\r\n      <div *ngIf=\"edit\" class=\"w3-half\">\r\n        <input [(ngModel)]=\"profile.firstname\" class=\"w3-input\" type=\"text\" required>\r\n        <i class=\"fa fa-envelope\" style=\"width:30px\"> </i><label>First Name</label>\r\n      </div>\r\n      <div *ngIf=\"edit\" class=\"w3-half\">\r\n        <input [(ngModel)]=\"profile.lastname\" class=\"w3-input\" type=\"text\" required>\r\n        <i class=\"fa fa-lock\" style=\"width:30px\"> </i><label>Last Name</label>\r\n      </div>\r\n      <p class=\"w3-section\">\r\n        <i class=\"fa fa-briefcase fa-fw w3-margin-right w3-large w3-text-teal\"></i>\r\n        <span *ngIf=\"!edit\">{{holder.dob}}</span>\r\n        <span *ngIf=\"edit\"><input [(ngModel)]=\"profile.dob\" class=\"w3-input\" type=\"text\" required></span>\r\n      </p>\r\n      <p>\r\n        <i class=\"fa fa-home fa-fw w3-margin-right w3-large w3-text-teal\"></i>\r\n        <span *ngIf=\"!edit\">{{holder.address}}</span>\r\n        <span *ngIf=\"edit\"><input [(ngModel)]=\"profile.address\" class=\"w3-input\" type=\"text\" required></span>\r\n      </p>\r\n      <p>\r\n        <i class=\"fa fa-envelope fa-fw w3-margin-right w3-large w3-text-teal\"></i>\r\n        <span *ngIf=\"!edit\">{{holder.email}}</span>\r\n        <span *ngIf=\"edit\"><input [(ngModel)]=\"profile.email\" class=\"w3-input\" type=\"text\" required></span>\r\n      </p>\r\n      <p *ngIf=\"!edit\"><i class=\"fa fa-edit fa-fw w3-margin-right w3-large w3-text-blue\" (click)=\"toggle('edit')\"></i>\r\n      </p>\r\n      <p *ngIf=\"edit\"><i class=\"fa fa-check fa-fw w3-margin-right w3-large w3-text-green\" (click)=\"toggle('exit'); saveProfile()\"></i>\r\n        <i class=\"fa fa-times-circle fa-fw w3-margin-right w3-large w3-text-red\" (click)=\"toggle('exit'); cancelProfile()\"></i></p>\r\n      <hr>\r\n\r\n      <p class=\"w3-large\"><b><i class=\"fa fa-asterisk fa-fw w3-margin-right w3-text-teal\"></i>Credit</b></p>\r\n      <p>Score</p>\r\n      <div class=\"w3-light-grey w3-round-xlarge w3-small\">\r\n        <div class=\"w3-container w3-center w3-round-xlarge w3-teal\" style=\"width:50%\">{{holder.creditScore}}</div>\r\n      </div>\r\n      <br>\r\n      <br>\r\n    </div>\r\n  </div><br>","import { AccountHolder } from '../../models/account-holder';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ValidationService } from 'src/app/services/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  holder: AccountHolder = {} as AccountHolder;\r\n  message: string;\r\n\r\n  constructor(private service: UserService, private validation: ValidationService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  register() {\r\n    this.service.register(this.holder).subscribe(\r\n      data => console.log(data),\r\n      error => this.message = error.message,\r\n      () => this.reset()\r\n    );\r\n  }\r\n\r\n  reset() {\r\n    this.holder = {} as AccountHolder;\r\n    this.message = \"\";\r\n  }\r\n}\r\n","<div class=\"w3-section\">\r\n    <div class=\"w3-container w3-card-4\">\r\n        <h2>Join our banking services</h2>       \r\n        <div class=\"w3-half\">\r\n            <input [(ngModel)]=\"holder.firstname\" class=\"w3-input\" type=\"text\" required>\r\n            <i class=\"fa fa-envelope\" style=\"width:30px\"> </i><label>Firstname</label>\r\n        </div>\r\n        <div class=\"w3-half\">\r\n            <input [(ngModel)]=\"holder.lastname\" class=\"w3-input\" type=\"text\" required>\r\n            <i class=\"fa fa-lock\" style=\"width:30px\"> </i><label>Lastname</label>\r\n        </div>      \r\n        <div class=\"w3-half\">\r\n            <input [(ngModel)]=\"holder.address\" class=\"w3-input\" type=\"text\" required>\r\n            <i class=\"fa fa-lock\" style=\"width:30px\"> </i><label>Address</label>\r\n        </div>\r\n        <div class=\"w3-half\">\r\n            <input [(ngModel)]=\"holder.ssn\" class=\"w3-input\" type=\"text\" required>\r\n            <i class=\"fa fa-lock\" style=\"width:30px\"> </i><label>Social-Security #</label>\r\n        </div>\r\n        <div class=\"w3-half\">\r\n            <input [(ngModel)]=\"holder.email\" class=\"w3-input\" type=\"text\" required>\r\n            <i class=\"fa fa-envelope\" style=\"width:30px\"> </i><label>Email</label>\r\n        </div>\r\n        <div class=\"w3-half\">\r\n            <input [(ngModel)]=\"holder.password\" class=\"w3-input\" type=\"text\" required>\r\n            <i class=\"fa fa-lock\" style=\"width:30px\"> </i><label>Password</label>\r\n        </div>\r\n        <div class=\"w3-half\">\r\n            <input [(ngModel)]=\"holder.dob\" class=\"w3-input\" type=\"text\" required>\r\n            <i class=\"fa fa-envelope\" style=\"width:30px\"> </i><label>Date of birth</label>\r\n        </div>\r\n        <div *ngIf=\"message\" class=\"w3-center\">\r\n            <p>{{message}}</p>\r\n        </div>\r\n        <div class=\"w3-center\">\r\n            <button type=\"button\" (click)=\"register()\" class=\"w3-button w3-red w3-margin-top\">REGISTER</button>\r\n        </div>\r\n    </div>\r\n</div>","import { BehaviorSubject, Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { AccountHolder } from '../models/account-holder';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n\n  blankHolder: AccountHolder = {} as AccountHolder\n\n  public unsunscribe = new Subject();\n\n  private behavior = new BehaviorSubject<AccountHolder>(this.blankHolder);\n\n  public setSession(holder: AccountHolder){\n    this.behavior.next(holder);\n  }\n\n  public session = this.behavior.asObservable();\n}\n","import { register } from 'ts-node';\r\nimport { AccountHolder } from '../models/account-holder';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { Profile } from '../models/profile';\r\nimport { Transaction } from '../models/transaction';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public register(holder: AccountHolder): Observable<AccountHolder> {\r\n    return this.http.post<AccountHolder>(`${environment.baseUrl}/${environment.registerUrl}`, holder);\r\n  }\r\n\r\n  public login(profile: Profile): Observable<AccountHolder> {\r\n    return this.http.post<AccountHolder>(`${environment.baseUrl}/${environment.loginUrl}`, profile);\r\n  }\r\n\r\n  public logout(profile: Profile): Observable<AccountHolder> {\r\n    return this.http.post<AccountHolder>(`${environment.baseUrl}/${environment.logoutUrl}`, profile);\r\n  }\r\n\r\n  public applyForAccount(transaction: Transaction): Observable<AccountHolder> {\r\n    return this.http.post<AccountHolder>(`${environment.baseUrl}/${environment.applyUrl}`, transaction);\r\n  }\r\n\r\n  public editProfile(profile: Profile): Observable<AccountHolder> {\r\n    return this.http.put<AccountHolder>(`${environment.baseUrl}/${environment.editUrl}`, profile);\r\n  }\r\n\r\n  public deposit(transaction: Transaction): Observable<AccountHolder> {\r\n    return this.http.put<AccountHolder>(`${environment.baseUrl}/${environment.depositUrl}`, transaction);\r\n  }\r\n\r\n  public withdraw(transaction: Transaction): Observable<AccountHolder> {\r\n    return this.http.put<AccountHolder>(`${environment.baseUrl}/${environment.withdrawUrl}`, transaction);\r\n  }\r\n\r\n  public transfer(transaction: Transaction): Observable<AccountHolder> {\r\n    return this.http.put<AccountHolder>(`${environment.baseUrl}/${environment.transferUrl}`, transaction);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationService {\n\n  constructor() { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: \"http://localhost:9000/api/v1\",\n  registerUrl: \"register\",\n  loginUrl: \"login\",\n  logoutUrl: \"logout\",\n  applyUrl: \"apply\",\n  editUrl: \"edit\",\n  depositUrl: \"deposit\",\n  withdrawUrl: \"withdraw\",\n  transferUrl: \"transfer\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}